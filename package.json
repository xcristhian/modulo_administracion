{
  "private": true,
  "scripts": {
    "dev": "npm run development",
    "development": "cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js",
    "watch": "npm run development -- --watch",
    "watch-poll": "npm run watch -- --watch-poll",
    "hot": "cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js",
    "prod": "npm run production",
    "production": "cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --no-progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js"
  },
  "devDependencies": {
    "axios": "^0.27.2",
    "bootstrap": "^4.0.0",
    "cross-env": "^5.1",
    "jquery": "^3.5",
    "laravel-mix": "^6.0.49",
    "lodash": "^4.17.19",
    "popper.js": "^1.12",
    "resolve-url-loader": "^5.0.0",
    "sass": "^1.15.2",
    "sass-loader": "^7.1.0",
    "vue": "^2.5.17"
  },
  "dependencies": {
    "bower": "^1.8.14",
    "easy-autocomplete": "^1.3.5"
  },
  "name": "admin",
  "description": "Administración de artículos de inventario con Laravel  ![Administración de artículos con Laravel](https://parzibyte.me/blog/wp-content/uploads/2020/05/Art%C3%ADculos-con-fotos-Software-en-Laravel.png) # Tutorial https://parzibyte.me/blog/2020/05/10/sistema-administracion-inventario-laravel/ # Instalación * Clonar repositorio * Instalar composer * Instalar dependencias con `composer install` * Configurar env; es decir, crear un archivo llamado **.env** tomando como ejemplo **.env.example** y configurar las credenciales * Crea una clave de encriptación con `php artisan key:generate` * Crear la base de datos que se indicó en **.env** * Realiza la migración con `php artisan migrate` * Ahora en MySQL crea un usuario dentro de la tabla; que puede ser con: ```sql insert into usuarios (nombre, password) values ('parzibyte', '$2y$10$vtiiIwVGb3kIg2wRBsPz/exsAEWeKKc92Ic397p7TeUtx8baswnp2'); ``` Eso hará que exista un usuario llamado **parzibyte** con la contraseña **hunter2**. Por el momento Laravel usa bcrypt así que si quieres generar tu propia contraseña puedes obtenerla con php: ```php <?php $hasheada = password_hash('123', PASSWORD_BCRYPT); echo $hasheada; ```",
  "version": "1.0.0",
  "main": "webpack.mix.js",
  "directories": {
    "test": "tests"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xcristhian/modulo_administracion.git"
  },
  "author": "cristhian",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/xcristhian/modulo_administracion/issues"
  },
  "homepage": "https://github.com/xcristhian/modulo_administracion#readme"
}
